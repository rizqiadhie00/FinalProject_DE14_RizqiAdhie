[2023-09-25 16:43:38,706] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: 1_dags.get_data_from_api manual__2023-09-25T16:28:57.423014+00:00 [queued]>
[2023-09-25 16:43:38,757] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: 1_dags.get_data_from_api manual__2023-09-25T16:28:57.423014+00:00 [queued]>
[2023-09-25 16:43:38,766] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-09-25 16:43:38,770] {taskinstance.py:1357} INFO - Starting attempt 4 of 4
[2023-09-25 16:43:38,776] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-09-25 16:43:38,847] {taskinstance.py:1377} INFO - Executing <Task(PythonOperator): get_data_from_api> on 2023-09-25 16:28:57.423014+00:00
[2023-09-25 16:43:38,870] {standard_task_runner.py:52} INFO - Started process 440 to run task
[2023-09-25 16:43:38,927] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', '1_dags', 'get_data_from_api', 'manual__2023-09-25T16:28:57.423014+00:00', '--job-id', '12', '--raw', '--subdir', 'DAGS_FOLDER/1_dags.py', '--cfg-path', '/tmp/tmp1a900u9f', '--error-file', '/tmp/tmp_2jncg_p']
[2023-09-25 16:43:38,928] {standard_task_runner.py:80} INFO - Job 12: Subtask get_data_from_api
[2023-09-25 16:43:39,314] {task_command.py:369} INFO - Running <TaskInstance: 1_dags.get_data_from_api manual__2023-09-25T16:28:57.423014+00:00 [running]> on host 615eeecb9afd
[2023-09-25 16:43:39,626] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=1_dags
AIRFLOW_CTX_TASK_ID=get_data_from_api
AIRFLOW_CTX_EXECUTION_DATE=2023-09-25T16:28:57.423014+00:00
AIRFLOW_CTX_TRY_NUMBER=4
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-09-25T16:28:57.423014+00:00
[2023-09-25 16:43:42,697] {covid_scrapper.py:12} INFO - GETT
[2023-09-25 16:43:42,710] {covid_scrapper.py:14} INFO - DATA READY
[2023-09-25 16:43:42,779] {logging_mixin.py:115} INFO - <class 'pandas.core.frame.DataFrame'>
RangeIndex: 145 entries, 0 to 144
Data columns (total 20 columns):
 #   Column                    Non-Null Count  Dtype 
---  ------                    --------------  ----- 
 0   CLOSECONTACT              145 non-null    int64 
 1   CONFIRMATION              145 non-null    int64 
 2   PROBABLE                  145 non-null    int64 
 3   SUSPECT                   145 non-null    int64 
 4   closecontact_dikarantina  145 non-null    int64 
 5   closecontact_discarded    145 non-null    int64 
 6   closecontact_meninggal    145 non-null    int64 
 7   confirmation_meninggal    145 non-null    int64 
 8   confirmation_sembuh       145 non-null    int64 
 9   kode_kab                  145 non-null    object
 10  kode_prov                 145 non-null    object
 11  nama_kab                  145 non-null    object
 12  nama_prov                 145 non-null    object
 13  probable_diisolasi        145 non-null    int64 
 14  probable_discarded        145 non-null    int64 
 15  probable_meninggal        145 non-null    int64 
 16  suspect_diisolasi         145 non-null    int64 
 17  suspect_discarded         145 non-null    int64 
 18  suspect_meninggal         145 non-null    int64 
 19  tanggal                   145 non-null    object
dtypes: int64(15), object(5)
memory usage: 22.8+ KB
[2023-09-25 16:43:42,779] {logging_mixin.py:115} INFO - None
[2023-09-25 16:43:43,050] {1_dags.py:35} ERROR - (mysql.connector.errors.ProgrammingError) 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXISTS covid_jabar' at line 1
[SQL: DROP table TF EXISTS covid_jabar]
(Background on this error at: http://sqlalche.me/e/14/f405)
[2023-09-25 16:43:43,104] {taskinstance.py:1889} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 171, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 189, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/1_dags.py", line 38, in fun_get_data_from_api
    data.to_sql(con=engine_sql, name="covid_jabar", index=False)
  File "/home/airflow/.local/lib/python3.7/site-packages/pandas/core/generic.py", line 2882, in to_sql
    method=method,
  File "/home/airflow/.local/lib/python3.7/site-packages/pandas/io/sql.py", line 728, in to_sql
    **engine_kwargs,
  File "/home/airflow/.local/lib/python3.7/site-packages/pandas/io/sql.py", line 1758, in to_sql
    dtype=dtype,
  File "/home/airflow/.local/lib/python3.7/site-packages/pandas/io/sql.py", line 1650, in prep_table
    table.create()
  File "/home/airflow/.local/lib/python3.7/site-packages/pandas/io/sql.py", line 858, in create
    raise ValueError(f"Table '{self.name}' already exists.")
ValueError: Table 'covid_jabar' already exists.
[2023-09-25 16:43:43,160] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=1_dags, task_id=get_data_from_api, execution_date=20230925T162857, start_date=20230925T164338, end_date=20230925T164343
[2023-09-25 16:43:43,180] {standard_task_runner.py:97} ERROR - Failed to execute job 12 for task get_data_from_api (Table 'covid_jabar' already exists.; 440)
[2023-09-25 16:43:43,220] {local_task_job.py:156} INFO - Task exited with return code 1
[2023-09-25 16:43:43,373] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
